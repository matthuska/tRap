// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// R_affinity_sum_multi
Rcpp::NumericVector R_affinity_sum_multi(Rcpp::NumericVector pwm, int motiflength, std::vector< std::string > sequence, Rcpp::IntegerVector seqlength, double Rmax, double lambda, int bothstrands);
RcppExport SEXP _tRap_R_affinity_sum_multi(SEXP pwmSEXP, SEXP motiflengthSEXP, SEXP sequenceSEXP, SEXP seqlengthSEXP, SEXP RmaxSEXP, SEXP lambdaSEXP, SEXP bothstrandsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pwm(pwmSEXP);
    Rcpp::traits::input_parameter< int >::type motiflength(motiflengthSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > >::type sequence(sequenceSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type seqlength(seqlengthSEXP);
    Rcpp::traits::input_parameter< double >::type Rmax(RmaxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type bothstrands(bothstrandsSEXP);
    rcpp_result_gen = Rcpp::wrap(R_affinity_sum_multi(pwm, motiflength, sequence, seqlength, Rmax, lambda, bothstrands));
    return rcpp_result_gen;
END_RCPP
}
// R_affinity_multi
Rcpp::List R_affinity_multi(Rcpp::NumericVector pwm, int motiflength, std::vector< std::string > sequence, Rcpp::IntegerVector seqlength, double Rmax, double lambda, int bothstrands);
RcppExport SEXP _tRap_R_affinity_multi(SEXP pwmSEXP, SEXP motiflengthSEXP, SEXP sequenceSEXP, SEXP seqlengthSEXP, SEXP RmaxSEXP, SEXP lambdaSEXP, SEXP bothstrandsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pwm(pwmSEXP);
    Rcpp::traits::input_parameter< int >::type motiflength(motiflengthSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > >::type sequence(sequenceSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type seqlength(seqlengthSEXP);
    Rcpp::traits::input_parameter< double >::type Rmax(RmaxSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type bothstrands(bothstrandsSEXP);
    rcpp_result_gen = Rcpp::wrap(R_affinity_multi(pwm, motiflength, sequence, seqlength, Rmax, lambda, bothstrands));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tRap_R_affinity_sum_multi", (DL_FUNC) &_tRap_R_affinity_sum_multi, 7},
    {"_tRap_R_affinity_multi", (DL_FUNC) &_tRap_R_affinity_multi, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_tRap(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
